{"version":3,"sources":["components/LocationSearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["LocationSearchForm","props","useState","currentCity","setCurrentCity","className","onSubmit","event","preventDefault","searchCurrentCityCallBack","type","placeholder","onChange","target","value","BASE_URL","App","location","setLocation","baseUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTA8BeA,EA5BY,SAACC,GAAW,IAAD,EACEC,mBAAS,IADX,mBAC7BC,EAD6B,KAChBC,EADgB,KAYpC,OACE,sBAAMC,UAAU,0BAA0BC,SANvB,SAACC,GACpBA,EAAMC,iBACNP,EAAMQ,0BAA0BN,IAIhC,SACE,qBAAKE,UAAU,aAAf,SACE,uBACEK,KAAK,OACLL,UAAU,aACVM,YAAY,iBACZC,SAhBa,SAACL,GACpBH,EAAeG,EAAMM,OAAOC,QAgBtBA,MAAOX,SCfbY,EAAU,GAIZA,EAAU,iDA0BGC,MAvBf,WAAgB,IAAD,EAEmBd,mBAAS,MAF5B,mBAENe,EAFM,KAEIC,EAFJ,KAOb,OACE,qBAAKb,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,8DACA,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CAAoBI,0BAVL,SAACN,GACxBe,EAAYf,MAUJ,cAAC,IAAD,IACA,cAAC,IAAD,CAAMc,SAAWA,EAAWE,QAAUJ,eCjBnCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.766a5a0e.chunk.js","sourcesContent":["import React, { useState } from 'react'; \n\nconst LocationSearchForm = (props) => {\n  const [currentCity, setCurrentCity] = useState('');\n\n  const onCitySearch = (event) => {\n    setCurrentCity(event.target.value)\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.searchCurrentCityCallBack(currentCity);\n  };\n\n  return (\n    <form className='currentCity-search-form' onSubmit={onFormSubmit}>\n      <div className='search-box'>\n        <input  \n          type='text'\n          className='search-bar'\n          placeholder='City, Country '\n          onChange={onCitySearch}\n          value={currentCity}\n        />\n      </div>\n    </form>\n  );\n\n}\n\nexport default LocationSearchForm;","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from './components/Navigation';\nimport Main from './components/Main';\nimport LocationSearchForm from './components/LocationSearchForm';\n\nlet BASE_URL =''\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  BASE_URL =\"http://localhost:5000/\"\n} else {\n  BASE_URL= \"https://hidden-escarpment-16617.herokuapp.com/\"\n}\n\nfunction App() {\n\n  const [location, setLocation] = useState(null);\n  const onLocationPicked = (currentCity) => {\n    setLocation(currentCity)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h3> This is testing deployment </h3>\n      <div className='weather-box'>\n          <div className='temp'>\n            <LocationSearchForm searchCurrentCityCallBack={ onLocationPicked } />\n            <Navigation />\n            <Main location={ location } baseUrl={ BASE_URL } />\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}